# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch (usually 'main' or 'master')
  push:
    branches: ["main"] # Change this if your default branch is different

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Or your preferred Node.js version (e.g., 18)
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run Tests
        run: yarn test
      - name: Build
        run: yarn build
        # Ensure your build script correctly uses the base path from vite.config.ts
      - name: Setup Pages
        uses: actions/configure-pages@v4
        # No configuration needed if deploying directly from build output
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the build output directory (default for Vite is 'dist')
          path: "./dist"
      # No separate deployment step needed if using the next job

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Ensure the build job completes before deploying
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # This action automatically deploys the artifact uploaded in the 'build' job
